datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_CONNECTION_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator pothos {
  provider     = "prisma-pothos-types"
  clientOutput = "@prisma/client"
  output       = "./generated/pothos.d.ts"
}

generator kysely {
  provider = "prisma-kysely"
  output   = "./generated"
  fileName = "kysely.d.ts"
}

model User {
  id             String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  accessKey      String         @unique
  name           String
  textToSpeeches TextToSpeech[] @relation("UserTextToSpeeches")

  voiceModelsCreated VoiceModel[] @relation("VoiceModelCreatedBy")
  voiceModelsUpdated VoiceModel[] @relation("VoiceModelUpdatedBy")
}

model VoiceModel {
  id                       String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  filesizeForWeights       Int // Bytes
  filesizeForAdded         Int // Bytes
  hidden                   Boolean
  processed                Boolean
  name                     String
  checksumMD5ForAdded      String            @unique
  checksumMD5ForWeights    String            @unique
  checksumSHA256ForAdded   String            @unique
  checksumSHA256ForWeights String            @unique
  modelConfig              VoiceModelConfig?
  sourceModel              AIHubVoiceModel?
  textToSpeeches           TextToSpeech[]    @relation("VoiceModelTextToSpeeches")

  createdBy   User?     @relation(fields: [createdById], references: [id], name: "VoiceModelCreatedBy")
  updatedBy   User?     @relation(fields: [updatedById], references: [id], name: "VoiceModelUpdatedBy")
  createdDate DateTime?
  updatedDate DateTime?
  createdById String?   @db.Uuid
  updatedById String?   @db.Uuid
  isDeleted   Boolean?
}

model VoiceModelConfig {
  id                    String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  qualityScore          Float
  f0Curve               String
  transposePitch        Int
  pitchExtractionMethod String
  searchFeatureRatio    Float
  filterRadius          Int
  audioResampling       Int
  volumeEnvelopeScaling Float
  artifactProtection    Float
  voiceModelId          String     @unique @db.Uuid
  voiceModel            VoiceModel @relation(fields: [voiceModelId], references: [id])
}

model AIHubVoiceModel {
  id                    String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  downloadCount         Int
  name                  String?
  checksumMD5ForWeights String                @unique
  filename              String
  creatorText           String?
  version               String // RVC v2 | RVC v1
  derivedModelId        String?               @unique @db.Uuid
  derivedModel          VoiceModel?           @relation(fields: [derivedModelId], references: [id])
  backupUrls            VoiceModelBackupUrl[] @relation("AIHubVoiceModelBackupUrls")
  inferredProfile       VoiceModelProfile?    @relation("AIHubVoiceModelProfile")
}

model VoiceModelProfile {
  id                               String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  confidence                       Float
  fictional                        Boolean
  name                             String
  gender                           String // male | female
  relevantTags                     String[]
  accent                           String
  nativeLanguage                   String
  modelTrainedOnEnglishProbability Float
  voiceModelId                     String          @unique @db.Uuid
  voiceModel                       AIHubVoiceModel @relation(fields: [voiceModelId], references: [id], name: "AIHubVoiceModelProfile")
}

model VoiceModelBackupUrl {
  id           String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  url          String          @unique
  voiceModelId String          @db.Uuid
  voiceModel   AIHubVoiceModel @relation(fields: [voiceModelId], references: [id], name: "AIHubVoiceModelBackupUrls")
}

model TextToSpeech {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  inputText    String
  outputUrl    String
  voiceModelId String     @db.Uuid
  userId       String     @db.Uuid
  voiceModel   VoiceModel @relation(fields: [voiceModelId], references: [id], name: "VoiceModelTextToSpeeches")
  user         User       @relation(fields: [userId], references: [id], name: "UserTextToSpeeches")
}
